<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0063)http://plugins.cordova.io/#/package/org.apache.cordova.contacts -->
<html class="no-js" icfbcfhfbddaebdjafaeecabejihbgbb_j="1"><!--<![endif]--><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><style type="text/css">@charset "UTF-8";[ng\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide{display:none !important;}ng\:form{display:block;}</style>
  
  <meta name="keywords" content="">
  <meta name="description" content="">
  <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0">
  
  <title>Cordova Plugin Registry</title>
  <!-- <link rel="stylesheet" type="text/css" href="css/topcoat-mobile-light.min.css" /> -->
  <!-- <link rel="stylesheet" type="text/css" href="css/grid.min.css"> -->
  <link href="./contacts_files/styles.css" rel="stylesheet" type="text/css">
  <link href="http://plugins.cordova.io/images/favicon.ico" rel="shortcut icon" type="image/x-icon">

<style id="qb-sougou-search-style" type="text/css">#qb-sougou-search{position:absolute;border-radius:2px;border:1px solid #7f7f7f;border-color:rgba(0,0,0,.5);min-width:105px;background-color:#fff;cursor:default;box-shadow:2px 2px 0 0 rgba(0,0,0,.2);overflow: hidden;z-index:999999;white-space:nowrap;font-family:"Microsoft Yahei","微软雅黑","宋体",Tahoma,Arial,Helvetica,STHeiti;transition:opacity .1s ease-in;-webkit-transition:opacity .1s ease-in;}#qb-sougou-search * {box-sizing:content-box;}#qb-sougou-search iframe {position:absolute;top:0;right:0;border:0;width:100%;height:100%;z-index: -1;opacity:0;filter:alpha(opacity=0);}#qb-sougou-search p {float: left;margin: 0;padding: 4px 14px;height:21px;line-height:21px;color:#474747;font-size:14px;white-space:nowrap;}#qb-sougou-search .last-btn {border-left:1px solid #bfbfbf;}#qb-sougou-search p:hover {background:#efefef;color:#000;}#qb-sougou-search p:before,#qb-sougou-search p:after {display:none;}</style></head>

<body ng-app="registry" class="ng-scope">

  <div id="header" class="">
    <div class="header-content row">
        <div class="column-5--lap column-11--hand offset-1--hand">
            <div class="row center">
                <a href="http://plugins.cordova.io/" title="Home">
                    <div class="registry-logo pluggy-logo top-logo column-1--hand"></div>
                </a>
                <div class="column-8--hand column-10--lap">
                    <div class="row">
                        <a href="http://plugins.cordova.io/" title="Home">
                            <div class="top-project-text column-12--hand">Apache Cordova</div>
                        </a>
                    </div>
                    <div class="row">
                        <a href="http://plugins.cordova.io/" title="Home">
                            <div class="top-plugins-registry-text column-12--hand">Plugins Registry</div>
                        </a>
                    </div>
                 </div>
            </div>
      </div>
    </div>
  </div>
  
  <div id="banner" class="row center">
    <div class="row">
      <h2>Plugins Registry is moving to npm. Click <a href="http://cordova.apache.org/announcements/2015/04/21/plugins-release-and-move-to-npm.html"> here </a> for details.</h2>
    </div>
  </div>    

  <!-- ngView:  --><div id="content-wrapper" ng-view="" class="ng-scope">    <topbar class="ng-scope"><div class="row topbar-row">
    <div class="column-12--hand column-4--lap column-3--desk offset-1--lap offset-2--desk">
        <form ng-submit="search($event)" class="ng-pristine ng-valid">
            <div class="row center">
            <input id="search-text" type="search" ng-model="searchText" class="column-8--hand topbar-search ng-pristine ng-valid" placeholder="Find a plugin..." ng-enter="search()">
            <input type="submit" id="submit" value="" class="column-1--hand topbar-button">
            </div>
        </form>
    </div>
    <div class="column-12--hand column-2--lap center topbar-spacer invisible--hand visible--lap">
        OR
    </div>
    <div class="column-12--hand column-4--lap column-3--desk center topbar-browse">   
        <a href="http://plugins.cordova.io/#/viewAll" class="ng-binding">Browse all 985 plugins</a> 
    </div>
</div>
</topbar>
<div class="viewContainer row package-detail-rows ng-scope">
    <div class="column-8--lap column-12--hand offset-2--lap">


        <div class="top-button">
            <a ng-click="backToSearch()"><i class="icon-left-dir"></i>Back to search results</a>
        </div>

        <div class="row toprow">
            <div class="package-label column-8--hand">Plugin ID</div>
            <div class="column-4--hand column-2--lap offset-2--lap end">
                <label class="dropdown">
                <select class="version-dropdown ng-pristine ng-valid" ng-model="currentVersion" ng-options="key as key for (key, value) in versions"><option value="0.2.10" selected="selected">0.2.10</option><option value="0.2.11">0.2.11</option><option value="0.2.12">0.2.12</option><option value="0.2.13">0.2.13</option><option value="0.2.14">0.2.14</option><option value="0.2.15">0.2.15</option><option value="0.2.16" selected="selected">0.2.16</option><option value="0.2.3">0.2.3</option><option value="0.2.4">0.2.4</option><option value="0.2.5">0.2.5</option><option value="0.2.6">0.2.6</option><option value="0.2.7">0.2.7</option><option value="0.2.8">0.2.8</option><option value="0.2.9">0.2.9</option></select>
                </label>
            </div>

        </div>
        <div class="row">
            <div class="package-title column-12--hand ng-binding">org.apache.cordova.contacts</div>
        </div>

        <div class="row">
            <div class="column-8--hand column-10--lap">
                <div ng-show="description" class="space">
                    <div class="row">
                        <div class="package-label column-12--hand">Description</div>
                    </div>
                    <div class="row">
                        <div class="package-title column-12--hand ng-binding">Cordova Contacts Plugin</div>
                    </div>
                </div>

                <div ng-show="maintainers" class="space">
                    <div class="row">
                        <div class="package-label column-12--hand">Maintainers</div>
                    </div>
                    <div class="row">
                        <div class="column-12--hand ">
                            <!-- ngRepeat: maintainer in maintainers --><span class="ng-scope ng-binding" ng-repeat="maintainer in maintainers">agrieve<span ng-show="false" class="ng-hide">, &nbsp;</span></span><!-- end ngRepeat: maintainer in maintainers -->
                        </div>
                    </div>
                </div>

                <div class="space">
                    <div class="row">
                        <div class="package-label column-12--hand">Platforms</div>
                    </div>
                    <div class="row">
                        <div class="column-12--hand" ng-show="platforms">
                            <!-- ngRepeat: platform in platforms --><span class="ng-scope ng-binding" ng-repeat="platform in platforms">android<span ng-show="true" class="">, &nbsp;</span></span><!-- end ngRepeat: platform in platforms --><span class="ng-scope ng-binding" ng-repeat="platform in platforms">amazon-fireos<span ng-show="true" class="">, &nbsp;</span></span><!-- end ngRepeat: platform in platforms --><span class="ng-scope ng-binding" ng-repeat="platform in platforms">ubuntu<span ng-show="true" class="">, &nbsp;</span></span><!-- end ngRepeat: platform in platforms --><span class="ng-scope ng-binding" ng-repeat="platform in platforms">ios<span ng-show="true" class="">, &nbsp;</span></span><!-- end ngRepeat: platform in platforms --><span class="ng-scope ng-binding" ng-repeat="platform in platforms">blackberry10<span ng-show="true" class="">, &nbsp;</span></span><!-- end ngRepeat: platform in platforms --><span class="ng-scope ng-binding" ng-repeat="platform in platforms">wp7<span ng-show="true" class="">, &nbsp;</span></span><!-- end ngRepeat: platform in platforms --><span class="ng-scope ng-binding" ng-repeat="platform in platforms">wp8<span ng-show="true" class="">, &nbsp;</span></span><!-- end ngRepeat: platform in platforms --><span class="ng-scope ng-binding" ng-repeat="platform in platforms">firefoxos<span ng-show="true" class="">, &nbsp;</span></span><!-- end ngRepeat: platform in platforms --><span class="ng-scope ng-binding" ng-repeat="platform in platforms">windows8<span ng-show="true" class="">, &nbsp;</span></span><!-- end ngRepeat: platform in platforms --><span class="ng-scope ng-binding" ng-repeat="platform in platforms">windows<span ng-show="false" class="ng-hide">, &nbsp;</span></span><!-- end ngRepeat: platform in platforms -->
                        </div>
                        <div class="column-12--hand ng-hide" ng-hide="platforms">
                            Not specified
                        </div>
                    </div>
                </div>

                <div ng-show="repo" class="space">
                    <div class="row">
                        <div class="package-label column-12--hand">Repository</div>
                    </div>
                    <div class="row">
                        <div class="column-12--hand"><a href="https://git-wip-us.apache.org/repos/asf/cordova-plugin-contacts.git" class="ng-binding">https://git-wip-us.apache.org/repos/asf/cordova-plugin-contacts.git</a></div>
                    </div>
                </div>

                <div ng-show="issue" class="space">
                    <div class="row">
                        <div class="package-label column-12--hand">Issue tracker</div>
                    </div>
                    <div class="row">
                        <div class="column-12--hand"><a href="https://issues.apache.org/jira/browse/CB/component/12320652" class="ng-binding">https://issues.apache.org/jira/browse/CB/component/12320652</a></div>
                    </div>
                </div>

                <div ng-show="keywords" class="space">
                    <div class="row">
                        <div class="package-label column-12--hand">Keywords</div>
                    </div>
                    <div class="row">
                        <div class="column-12--hand">
                            <!-- ngRepeat: keyword in keywords --><span class="ng-scope" ng-repeat="keyword in keywords"><a href="http://plugins.cordova.io/#/search?search=cordova" class="ng-binding">cordova</a><span ng-show="true" class="">,&nbsp;</span></span><!-- end ngRepeat: keyword in keywords --><span class="ng-scope" ng-repeat="keyword in keywords"><a href="http://plugins.cordova.io/#/search?search=contacts" class="ng-binding">contacts</a><span ng-show="false" class="ng-hide">,&nbsp;</span></span><!-- end ngRepeat: keyword in keywords -->
                        </div>
                    </div>
                </div>

                <div class="space">
                    <div class="row">
                        <div class="package-label column-12--hand ng-binding">Install Cordova Contacts Plugin using the <a href="http://cordova.apache.org/docs/en/edge/guide_cli_index.md.html#The%20Command-line%20Interface">Cordova CLI:</a></div>
                    </div>
                    <div class="row">
                        <div class="column-12--hand ng-binding">
                            cordova plugin add org.apache.cordova.contacts
                        </div>
                    </div>
                </div>
            </div>
            <div class="package-downloads column-4--hand column-2--lap">
                <div class="row">
                    <div class="package-label column-12--hand">
                        Total downloads
                    </div>
                </div>
                <div class="row">
                    <div class="column-12--hand ng-binding">
                        190410
                    </div>
                </div>
                <div class="row">
                    <div class="package-label column-12--hand">
                        Version
                    </div>
                </div>
                <div class="row">
                    <div class="column-12--hand ng-binding">
                        0.2.16
                    </div>
                </div>
                <div class="row" ng-show="lastupdated">
                    <div class="package-label column-12--hand">
                        Last Updated
                    </div>
                </div>
                <div class="row" ng-show="lastupdated">
                    <div class="column-12--hand ng-binding">
                        3 months ago
                    </div>
                </div>
                <div class="row ng-hide" ng-show="engines">
                    <div class="package-label column-12--hand">
                        Engine Number
                    </div>
                </div>
                <div class="row ng-hide" ng-show="engines">
                    <div class="column-12--hand">
                        <!-- ngRepeat: engine in engines -->
                    </div>
                </div>
                <div class="row">
                    <div class="package-label column-12--hand">
                        License
                    </div>
                </div>
                <div class="row">
                    <div class="column-12--hand ng-binding">
                        Apache 2.0
                    </div>
                </div>
            </div>
        </div>
        <div ng-show="readme" ng-hide="englishdoc" class="readme row ng-hide">
            <div class="column-12--hand">
                <div class="package-readme">README</div>
                <div class="ng-binding" ng-bind-html="readme">

<h1>org.apache.cordova.contacts</h1>
<p>Plugin documentation: <a href="http://plugins.cordova.io/doc/index.md">doc/index.md</a></p>
</div>
            </div>
        </div>
        <div ng-show="englishdoc" class="readme row">
            <div class="column-12--hand">
                <div class="package-readme">Docs</div>
                <div class="ng-binding" ng-bind-html="englishdoc">

<h1>org.apache.cordova.contacts</h1>
<p>This plugin defines a global <code>navigator.contacts</code> object, which provides access to the device contacts database.</p>
<p>Although the object is attached to the global scoped <code>navigator</code>, it is not available until after the <code>deviceready</code> event.</p>
<pre><code>document.addEventListener("deviceready", onDeviceReady, false);
function onDeviceReady() {
    console.log(navigator.contacts);
}
</code></pre><p><strong>WARNING</strong>: Collection and use of contact data raises
important privacy issues.  Your app's privacy policy should discuss
how the app uses contact data and whether it is shared with any other
parties.  Contact information is considered sensitive because it
reveals the people with whom a person communicates.  Therefore, in
addition to the app's privacy policy, you should strongly consider
providing a just-in-time notice before the app accesses or uses
contact data, if the device operating system doesn't do so
already. That notice should provide the same information noted above,
as well as obtaining the user's permission (e.g., by presenting
choices for <strong>OK</strong> and <strong>No Thanks</strong>).  Note that some app
marketplaces may require the app to provide a just-in-time notice and
obtain the user's permission before accessing contact data.  A
clear and easy-to-understand user experience surrounding the use of
contact data helps avoid user confusion and perceived misuse of
contact data.  For more information, please see the Privacy Guide.</p>
<h2>Installation</h2>
<pre><code>cordova plugin add org.apache.cordova.contacts
</code></pre><h3>Firefox OS Quirks</h3>
<p>Create <strong>www/manifest.webapp</strong> as described in
<a href="https://developer.mozilla.org/en-US/Apps/Developing/Manifest">Manifest Docs</a>.
Add relevant permisions.
There is also a need to change the webapp type to "privileged"  - <a href="https://developer.mozilla.org/en-US/Apps/Developing/Manifest#type">Manifest Docs</a>.
<strong>WARNING</strong>: All privileged apps enforce <a href="https://developer.mozilla.org/en-US/Apps/CSP">Content Security Policy</a> which forbids inline script. Initialize your application in another way.</p>
<pre><code>"type": "privileged",
"permissions": {
    "contacts": {
        "access": "readwrite",
        "description": "Describe why there is a need for such permission"
    }
}
</code></pre><h3>Windows Quirks</h3>
<p>Any contacts returned from <code>find</code> and <code>pickContact</code> methods are readonly, so your application cannot modify them.
<code>find</code> method available only on Windows Phone 8.1 devices.</p>
<h3>Windows 8 Quirks</h3>
<p>Windows 8 Contacts are readonly. Via the Cordova API Contacts are not queryable/searchable, you should inform the user to pick a contact as a call to contacts.pickContact which will open the 'People' app where the user must choose a contact.
Any contacts returned are readonly, so your application cannot modify them.</p>
<h2>navigator.contacts</h2>
<h3>Methods</h3>
<ul>
<li>navigator.contacts.create</li>
<li>navigator.contacts.find</li>
<li>navigator.contacts.pickContact</li>
</ul>
<h3>Objects</h3>
<ul>
<li>Contact</li>
<li>ContactName</li>
<li>ContactField</li>
<li>ContactAddress</li>
<li>ContactOrganization</li>
<li>ContactFindOptions</li>
<li>ContactError</li>
<li>ContactFieldType</li>
</ul>
<h2>navigator.contacts.create</h2>
<p>The <code>navigator.contacts.create</code> method is synchronous, and returns a new <code>Contact</code> object.</p>
<p>This method does not retain the Contact object in the device contacts
database, for which you need to invoke the <code>Contact.save</code> method.</p>
<h3>Supported Platforms</h3>
<ul>
<li>Android</li>
<li>BlackBerry 10</li>
<li>Firefox OS</li>
<li>iOS</li>
<li>Windows Phone 7 and 8</li>
</ul>
<h3>Example</h3>
<pre><code>var myContact = navigator.contacts.create({"displayName": "Test User"});
</code></pre><h2>navigator.contacts.find</h2>
<p>The <code>navigator.contacts.find</code> method executes asynchronously, querying the
device contacts database and returning an array of <code>Contact</code> objects.
The resulting objects are passed to the <code>contactSuccess</code> callback
function specified by the <strong>contactSuccess</strong> parameter.</p>
<p>The <strong>contactFields</strong> parameter specifies the fields to be used as a
search qualifier.  A zero-length <strong>contactFields</strong> parameter is invalid and results in
<code>ContactError.INVALID_ARGUMENT_ERROR</code>. A <strong>contactFields</strong> value of
<code>"*"</code> searches all contact fields.</p>
<p>The <strong>contactFindOptions.filter</strong> string can be used as a search
filter when querying the contacts database.  If provided, a
case-insensitive, partial value match is applied to each field
specified in the <strong>contactFields</strong> parameter.  If there's a match for
<em>any</em> of the specified fields, the contact is returned. Use <strong>contactFindOptions.desiredFields</strong>
parameter to control which contact properties must be returned back.</p>
<h3>Parameters</h3>
<ul>
<li><p><strong>contactFields</strong>: Contact fields to use as a search qualifier. <em>(DOMString[])</em> [Required]</p>
</li>
<li><p><strong>contactSuccess</strong>: Success callback function invoked with the array of Contact objects returned from the database. [Required]</p>
</li>
<li><p><strong>contactError</strong>: Error callback function, invoked when an error occurs. [Optional]</p>
</li>
<li><p><strong>contactFindOptions</strong>: Search options to filter navigator.contacts. [Optional]</p>
<p>  Keys include:</p>
<ul>
<li><p><strong>filter</strong>: The search string used to find navigator.contacts. <em>(DOMString)</em> (Default: <code>""</code>)</p>
</li>
<li><p><strong>multiple</strong>: Determines if the find operation returns multiple navigator.contacts. <em>(Boolean)</em> (Default: <code>false</code>)</p>
<ul>
<li><strong>desiredFields</strong>: Contact fields to be returned back. If specified, the resulting <code>Contact</code> object only features values for these fields. <em>(DOMString[])</em> [Optional]</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3>Supported Platforms</h3>
<ul>
<li>Android</li>
<li>BlackBerry 10</li>
<li>Firefox OS</li>
<li>iOS</li>
<li>Windows Phone 7 and 8</li>
<li>Windows (Windows Phone 8.1 devices only)</li>
</ul>
<h3>Example</h3>
<pre><code>function onSuccess(contacts) {
    alert('Found ' + contacts.length + ' contacts.');
};

function onError(contactError) {
    alert('onError!');
};

// find all contacts with 'Bob' in any name field
var options      = new ContactFindOptions();
options.filter   = "Bob";
options.multiple = true;
options.desiredFields = [navigator.contacts.fieldType.id];
var fields       = [navigator.contacts.fieldType.displayName, navigator.contacts.fieldType.name];
navigator.contacts.find(fields, onSuccess, onError, options);
</code></pre><h3>Windows Quirks</h3>
<ul>
<li><code>__contactFields__</code> is not supported and will be ignored. <code>find</code> method will always attempt to match the name, email address, or phone number of a contact.</li>
</ul>
<h2>navigator.contacts.pickContact</h2>
<p>The <code>navigator.contacts.pickContact</code> method launches the Contact Picker to select a single contact.
The resulting object is passed to the <code>contactSuccess</code> callback
function specified by the <strong>contactSuccess</strong> parameter.</p>
<h3>Parameters</h3>
<ul>
<li><p><strong>contactSuccess</strong>: Success callback function invoked with the single Contact object. [Required]</p>
</li>
<li><p><strong>contactError</strong>: Error callback function, invoked when an error occurs. [Optional]</p>
</li>
</ul>
<h3>Supported Platforms</h3>
<ul>
<li>Android</li>
<li>iOS</li>
<li>Windows Phone 8</li>
<li>Windows 8</li>
<li>Windows</li>
</ul>
<h3>Example</h3>
<pre><code>navigator.contacts.pickContact(function(contact){
        console.log('The following contact has been selected:' + JSON.stringify(contact));
    },function(err){
        console.log('Error: ' + err);
    });
</code></pre><h2>Contact</h2>
<p>The <code>Contact</code> object represents a user's contact.  Contacts can be
created, stored, or removed from the device contacts database.
Contacts can also be retrieved (individually or in bulk) from the
database by invoking the <code>navigator.contacts.find</code> method.</p>
<p><strong>NOTE</strong>: Not all of the contact fields listed above are supported on
every device platform.  Please check each platform's <em>Quirks</em> section
for details.</p>
<h3>Properties</h3>
<ul>
<li><p><strong>id</strong>: A globally unique identifier. <em>(DOMString)</em></p>
</li>
<li><p><strong>displayName</strong>: The name of this Contact, suitable for display to end users. <em>(DOMString)</em></p>
</li>
<li><p><strong>name</strong>: An object containing all components of a persons name. <em>(ContactName)</em></p>
</li>
<li><p><strong>nickname</strong>: A casual name by which to address the contact. <em>(DOMString)</em></p>
</li>
<li><p><strong>phoneNumbers</strong>: An array of all the contact's phone numbers. <em>(ContactField[])</em></p>
</li>
<li><p><strong>emails</strong>: An array of all the contact's email addresses. <em>(ContactField[])</em></p>
</li>
<li><p><strong>addresses</strong>: An array of all the contact's addresses. <em>(ContactAddress[])</em></p>
</li>
<li><p><strong>ims</strong>: An array of all the contact's IM addresses. <em>(ContactField[])</em></p>
</li>
<li><p><strong>organizations</strong>: An array of all the contact's organizations. <em>(ContactOrganization[])</em></p>
</li>
<li><p><strong>birthday</strong>: The birthday of the contact. <em>(Date)</em></p>
</li>
<li><p><strong>note</strong>: A note about the contact. <em>(DOMString)</em></p>
</li>
<li><p><strong>photos</strong>: An array of the contact's photos. <em>(ContactField[])</em></p>
</li>
<li><p><strong>categories</strong>:  An array of all the user-defined categories associated with the contact. <em>(ContactField[])</em></p>
</li>
<li><p><strong>urls</strong>:  An array of web pages associated with the contact. <em>(ContactField[])</em></p>
</li>
</ul>
<h3>Methods</h3>
<ul>
<li><p><strong>clone</strong>: Returns a new <code>Contact</code> object that is a deep copy of the calling object, with the <code>id</code> property set to <code>null</code>.</p>
</li>
<li><p><strong>remove</strong>: Removes the contact from the device contacts database, otherwise executes an error callback with a <code>ContactError</code> object.</p>
</li>
<li><p><strong>save</strong>: Saves a new contact to the device contacts database, or updates an existing contact if a contact with the same <strong>id</strong> already exists.</p>
</li>
</ul>
<h3>Supported Platforms</h3>
<ul>
<li>Amazon Fire OS</li>
<li>Android</li>
<li>BlackBerry 10</li>
<li>Firefox OS</li>
<li>iOS</li>
<li>Windows Phone 7 and 8</li>
<li>Windows 8</li>
<li>Windows</li>
</ul>
<h3>Save Example</h3>
<pre><code>function onSuccess(contact) {
    alert("Save Success");
};

function onError(contactError) {
    alert("Error = " + contactError.code);
};

// create a new contact object
var contact = navigator.contacts.create();
contact.displayName = "Plumber";
contact.nickname = "Plumber";            // specify both to support all devices

// populate some fields
var name = new ContactName();
name.givenName = "Jane";
name.familyName = "Doe";
contact.name = name;

// save to device
contact.save(onSuccess,onError);
</code></pre><h3>Clone Example</h3>
<pre><code>    // clone the contact object
    var clone = contact.clone();
    clone.name.givenName = "John";
    console.log("Original contact name = " + contact.name.givenName);
    console.log("Cloned contact name = " + clone.name.givenName);
</code></pre><h3>Remove Example</h3>
<pre><code>function onSuccess() {
    alert("Removal Success");
};

function onError(contactError) {
    alert("Error = " + contactError.code);
};

// remove the contact from the device
contact.remove(onSuccess,onError);
</code></pre><h3>Android 2.X Quirks</h3>
<ul>
<li><strong>categories</strong>:  Not supported on Android 2.X devices, returning <code>null</code>.</li>
</ul>
<h3>BlackBerry 10 Quirks</h3>
<ul>
<li><strong>id</strong>: Assigned by the device when saving the contact.</li>
</ul>
<h3>FirefoxOS Quirks</h3>
<ul>
<li><p><strong>categories</strong>: Partially supported. Fields <strong>pref</strong> and <strong>type</strong> are returning <code>null</code></p>
</li>
<li><p><strong>ims</strong>: Not supported</p>
</li>
<li><p><strong>photos</strong>: Not supported</p>
</li>
</ul>
<h3>iOS Quirks</h3>
<ul>
<li><p><strong>displayName</strong>: Not supported on iOS, returning <code>null</code> unless there is no <code>ContactName</code> specified, in which case it returns the composite name, <strong>nickname</strong> or <code>""</code>, respectively.</p>
</li>
<li><p><strong>birthday</strong>: Must be input as a JavaScript <code>Date</code> object, the same way it is returned.</p>
</li>
<li><p><strong>photos</strong>: Returns a File URL to the image, which is stored in the application's temporary directory.  Contents of the temporary directory are removed when the application exits.</p>
</li>
<li><p><strong>categories</strong>:  This property is currently not supported, returning <code>null</code>.</p>
</li>
</ul>
<h3>Windows Phone 7 and 8 Quirks</h3>
<ul>
<li><p><strong>displayName</strong>: When creating a contact, the value provided for the display name parameter differs from the display name retrieved when finding the contact.</p>
</li>
<li><p><strong>urls</strong>: When creating a contact, users can input and save more than one web address, but only one is available when searching the contact.</p>
</li>
<li><p><strong>phoneNumbers</strong>: The <em>pref</em> option is not supported. The <em>type</em> is not supported in a <em>find</em> operation. Only one <code>phoneNumber</code> is allowed for each <em>type</em>.</p>
</li>
<li><p><strong>emails</strong>: The <em>pref</em> option is not supported. Home and personal references same email entry. Only one entry is allowed for each <em>type</em>.</p>
</li>
<li><p><strong>addresses</strong>: Supports only work, and home/personal <em>type</em>. The home and personal <em>type</em> reference the same address entry. Only one entry is allowed for each <em>type</em>.</p>
</li>
<li><p><strong>organizations</strong>: Only one is allowed, and does not support the <em>pref</em>, <em>type</em>, and <em>department</em> attributes.</p>
</li>
<li><p><strong>note</strong>: Not supported, returning <code>null</code>.</p>
</li>
<li><p><strong>ims</strong>: Not supported, returning <code>null</code>.</p>
</li>
<li><p><strong>birthdays</strong>: Not supported, returning <code>null</code>.</p>
</li>
<li><p><strong>categories</strong>: Not supported, returning <code>null</code>.</p>
</li>
</ul>
<h3>Windows Quirks</h3>
<ul>
<li><p><strong>photos</strong>: Returns a File URL to the image, which is stored in the application's temporary directory.</p>
</li>
<li><p><strong>birthdays</strong>: Not supported, returning <code>null</code>.</p>
</li>
<li><p><strong>categories</strong>: Not supported, returning <code>null</code>.</p>
</li>
</ul>
<h2>ContactAddress</h2>
<p>The <code>ContactAddress</code> object stores the properties of a single address
of a contact.  A <code>Contact</code> object may include more than one address in
a <code>ContactAddress[]</code> array.</p>
<h3>Properties</h3>
<ul>
<li><p><strong>pref</strong>: Set to <code>true</code> if this <code>ContactAddress</code> contains the user's preferred value. <em>(boolean)</em></p>
</li>
<li><p><strong>type</strong>: A string indicating what type of field this is, <em>home</em> for example. <em>(DOMString)</em></p>
</li>
<li><p><strong>formatted</strong>: The full address formatted for display. <em>(DOMString)</em></p>
</li>
<li><p><strong>streetAddress</strong>: The full street address. <em>(DOMString)</em></p>
</li>
<li><p><strong>locality</strong>: The city or locality. <em>(DOMString)</em></p>
</li>
<li><p><strong>region</strong>: The state or region. <em>(DOMString)</em></p>
</li>
<li><p><strong>postalCode</strong>: The zip code or postal code. <em>(DOMString)</em></p>
</li>
<li><p><strong>country</strong>: The country name. <em>(DOMString)</em></p>
</li>
</ul>
<h3>Supported Platforms</h3>
<ul>
<li>Amazon Fire OS</li>
<li>Android</li>
<li>BlackBerry 10</li>
<li>Firefox OS</li>
<li>iOS</li>
<li>Windows Phone 7 and 8</li>
<li>Windows 8</li>
<li>Windows</li>
</ul>
<h3>Example</h3>
<pre><code>// display the address information for all contacts

function onSuccess(contacts) {
    for (var i = 0; i &lt; contacts.length; i++) {
        for (var j = 0; j &lt; contacts[i].addresses.length; j++) {
            alert("Pref: "         + contacts[i].addresses[j].pref          + "\n" +
                "Type: "           + contacts[i].addresses[j].type          + "\n" +
                "Formatted: "      + contacts[i].addresses[j].formatted     + "\n" +
                "Street Address: " + contacts[i].addresses[j].streetAddress + "\n" +
                "Locality: "       + contacts[i].addresses[j].locality      + "\n" +
                "Region: "         + contacts[i].addresses[j].region        + "\n" +
                "Postal Code: "    + contacts[i].addresses[j].postalCode    + "\n" +
                "Country: "        + contacts[i].addresses[j].country);
        }
    }
};

function onError(contactError) {
    alert('onError!');
};

// find all contacts
var options = new ContactFindOptions();
options.filter = "";
var filter = ["displayName", "addresses"];
navigator.contacts.find(filter, onSuccess, onError, options);
</code></pre><h3>Android 2.X Quirks</h3>
<ul>
<li><strong>pref</strong>: Not supported, returning <code>false</code> on Android 2.X devices.</li>
</ul>
<h3>BlackBerry 10 Quirks</h3>
<ul>
<li><p><strong>pref</strong>: Not supported on BlackBerry devices, returning <code>false</code>.</p>
</li>
<li><p><strong>type</strong>: Partially supported.  Only one each of <em>Work</em> and <em>Home</em> type addresses can be stored per contact.</p>
</li>
<li><p><strong>formatted</strong>: Partially supported.  Returns a concatenation of all BlackBerry address fields.</p>
</li>
<li><p><strong>streetAddress</strong>: Supported.  Returns a concatenation of BlackBerry <strong>address1</strong> and <strong>address2</strong> address fields.</p>
</li>
<li><p><strong>locality</strong>: Supported.  Stored in BlackBerry <strong>city</strong> address field.</p>
</li>
<li><p><strong>region</strong>: Supported.  Stored in BlackBerry <strong>stateProvince</strong> address field.</p>
</li>
<li><p><strong>postalCode</strong>: Supported.  Stored in BlackBerry <strong>zipPostal</strong> address field.</p>
</li>
<li><p><strong>country</strong>: Supported.</p>
</li>
</ul>
<h3>FirefoxOS Quirks</h3>
<ul>
<li><strong>formatted</strong>: Currently not supported</li>
</ul>
<h3>iOS Quirks</h3>
<ul>
<li><p><strong>pref</strong>: Not supported on iOS devices, returning <code>false</code>.</p>
</li>
<li><p><strong>formatted</strong>: Currently not supported.</p>
</li>
</ul>
<h3>Windows 8 Quirks</h3>
<ul>
<li><strong>pref</strong>: Not supported</li>
</ul>
<h3>Windows Quirks</h3>
<ul>
<li><strong>pref</strong>: Not supported</li>
</ul>
<h2>ContactError</h2>
<p>The <code>ContactError</code> object is returned to the user through the
<code>contactError</code> callback function when an error occurs.</p>
<h3>Properties</h3>
<ul>
<li><strong>code</strong>: One of the predefined error codes listed below.</li>
</ul>
<h3>Constants</h3>
<ul>
<li><code>ContactError.UNKNOWN_ERROR</code> (code 0)</li>
<li><code>ContactError.INVALID_ARGUMENT_ERROR</code> (code 1)</li>
<li><code>ContactError.TIMEOUT_ERROR</code> (code 2)</li>
<li><code>ContactError.PENDING_OPERATION_ERROR</code> (code 3)</li>
<li><code>ContactError.IO_ERROR</code> (code 4)</li>
<li><code>ContactError.NOT_SUPPORTED_ERROR</code> (code 5)</li>
<li><code>ContactError.PERMISSION_DENIED_ERROR</code> (code 20)</li>
</ul>
<h2>ContactField</h2>
<p>The <code>ContactField</code> object is a reusable component that represents
contact fields generically.  Each <code>ContactField</code> object contains a
<code>value</code>, <code>type</code>, and <code>pref</code> property.  A <code>Contact</code> object stores
several properties in <code>ContactField[]</code> arrays, such as phone numbers
and email addresses.</p>
<p>In most instances, there are no pre-determined values for a
<code>ContactField</code> object's <strong>type</strong> attribute.  For example, a phone
number can specify <strong>type</strong> values of <em>home</em>, <em>work</em>, <em>mobile</em>,
<em>iPhone</em>, or any other value that is supported by a particular device
platform's contact database.  However, for the <code>Contact</code> <strong>photos</strong>
field, the <strong>type</strong> field indicates the format of the returned image:
<strong>url</strong> when the <strong>value</strong> attribute contains a URL to the photo
image, or <em>base64</em> when the <strong>value</strong> contains a base64-encoded image
string.</p>
<h3>Properties</h3>
<ul>
<li><p><strong>type</strong>: A string that indicates what type of field this is, <em>home</em> for example. <em>(DOMString)</em></p>
</li>
<li><p><strong>value</strong>: The value of the field, such as a phone number or email address. <em>(DOMString)</em></p>
</li>
<li><p><strong>pref</strong>: Set to <code>true</code> if this <code>ContactField</code> contains the user's preferred value. <em>(boolean)</em></p>
</li>
</ul>
<h3>Supported Platforms</h3>
<ul>
<li>Amazon Fire OS</li>
<li>Android</li>
<li>BlackBerry 10</li>
<li>Firefox OS</li>
<li>iOS</li>
<li>Windows Phone 7 and 8</li>
<li>Windows 8</li>
<li>Windows</li>
</ul>
<h3>Example</h3>
<pre><code>    // create a new contact
    var contact = navigator.contacts.create();

    // store contact phone numbers in ContactField[]
    var phoneNumbers = [];
    phoneNumbers[0] = new ContactField('work', '212-555-1234', false);
    phoneNumbers[1] = new ContactField('mobile', '917-555-5432', true); // preferred number
    phoneNumbers[2] = new ContactField('home', '203-555-7890', false);
    contact.phoneNumbers = phoneNumbers;

    // save the contact
    contact.save();
</code></pre><h3>Android Quirks</h3>
<ul>
<li><strong>pref</strong>: Not supported, returning <code>false</code>.</li>
</ul>
<h3>BlackBerry 10 Quirks</h3>
<ul>
<li><p><strong>type</strong>: Partially supported.  Used for phone numbers.</p>
</li>
<li><p><strong>value</strong>: Supported.</p>
</li>
<li><p><strong>pref</strong>: Not supported, returning <code>false</code>.</p>
</li>
</ul>
<h3>iOS Quirks</h3>
<ul>
<li><strong>pref</strong>: Not supported, returning <code>false</code>.</li>
</ul>
<h3>Windows8 Quirks</h3>
<ul>
<li><strong>pref</strong>: Not supported, returning <code>false</code>.</li>
</ul>
<h3>Windows Quirks</h3>
<ul>
<li><strong>pref</strong>: Not supported, returning <code>false</code>.</li>
</ul>
<h2>ContactName</h2>
<p>Contains different kinds of information about a <code>Contact</code> object's name.</p>
<h3>Properties</h3>
<ul>
<li><p><strong>formatted</strong>: The complete name of the contact. <em>(DOMString)</em></p>
</li>
<li><p><strong>familyName</strong>: The contact's family name. <em>(DOMString)</em></p>
</li>
<li><p><strong>givenName</strong>: The contact's given name. <em>(DOMString)</em></p>
</li>
<li><p><strong>middleName</strong>: The contact's middle name. <em>(DOMString)</em></p>
</li>
<li><p><strong>honorificPrefix</strong>: The contact's prefix (example <em>Mr.</em> or <em>Dr.</em>) <em>(DOMString)</em></p>
</li>
<li><p><strong>honorificSuffix</strong>: The contact's suffix (example <em>Esq.</em>). <em>(DOMString)</em></p>
</li>
</ul>
<h3>Supported Platforms</h3>
<ul>
<li>Amazon Fire OS</li>
<li>Android</li>
<li>BlackBerry 10</li>
<li>Firefox OS</li>
<li>iOS</li>
<li>Windows Phone 7 and 8</li>
<li>Windows 8</li>
<li>Windows</li>
</ul>
<h3>Example</h3>
<pre><code>function onSuccess(contacts) {
    for (var i = 0; i &lt; contacts.length; i++) {
        alert("Formatted: "  + contacts[i].name.formatted       + "\n" +
            "Family Name: "  + contacts[i].name.familyName      + "\n" +
            "Given Name: "   + contacts[i].name.givenName       + "\n" +
            "Middle Name: "  + contacts[i].name.middleName      + "\n" +
            "Suffix: "       + contacts[i].name.honorificSuffix + "\n" +
            "Prefix: "       + contacts[i].name.honorificSuffix);
    }
};

function onError(contactError) {
    alert('onError!');
};

var options = new ContactFindOptions();
options.filter = "";
filter = ["displayName", "name"];
navigator.contacts.find(filter, onSuccess, onError, options);
</code></pre><h3>Android Quirks</h3>
<ul>
<li><strong>formatted</strong>: Partially supported, and read-only.  Returns a concatenation of <code>honorificPrefix</code>, <code>givenName</code>, <code>middleName</code>, <code>familyName</code>, and <code>honorificSuffix</code>.</li>
</ul>
<h3>BlackBerry 10 Quirks</h3>
<ul>
<li><p><strong>formatted</strong>: Partially supported.  Returns a concatenation of BlackBerry <strong>firstName</strong> and <strong>lastName</strong> fields.</p>
</li>
<li><p><strong>familyName</strong>: Supported.  Stored in BlackBerry <strong>lastName</strong> field.</p>
</li>
<li><p><strong>givenName</strong>: Supported.  Stored in BlackBerry <strong>firstName</strong> field.</p>
</li>
<li><p><strong>middleName</strong>: Not supported, returning <code>null</code>.</p>
</li>
<li><p><strong>honorificPrefix</strong>: Not supported, returning <code>null</code>.</p>
</li>
<li><p><strong>honorificSuffix</strong>: Not supported, returning <code>null</code>.</p>
</li>
</ul>
<h3>FirefoxOS Quirks</h3>
<ul>
<li><strong>formatted</strong>: Partially supported, and read-only.  Returns a concatenation of <code>honorificPrefix</code>, <code>givenName</code>, <code>middleName</code>, <code>familyName</code>, and <code>honorificSuffix</code>.</li>
</ul>
<h3>iOS Quirks</h3>
<ul>
<li><strong>formatted</strong>: Partially supported.  Returns iOS Composite Name, but is read-only.</li>
</ul>
<h3>Windows 8 Quirks</h3>
<ul>
<li><p><strong>formatted</strong>: This is the only name property, and is identical to <code>displayName</code>, and <code>nickname</code></p>
</li>
<li><p><strong>familyName</strong>: not supported</p>
</li>
<li><p><strong>givenName</strong>: not supported</p>
</li>
<li><p><strong>middleName</strong>: not supported</p>
</li>
<li><p><strong>honorificPrefix</strong>: not supported</p>
</li>
<li><p><strong>honorificSuffix</strong>: not supported</p>
</li>
</ul>
<h3>Windows Quirks</h3>
<ul>
<li><strong>formatted</strong>: It is identical to <code>displayName</code></li>
</ul>
<h2>ContactOrganization</h2>
<p>The <code>ContactOrganization</code> object stores a contact's organization
properties.  A <code>Contact</code> object stores one or more
<code>ContactOrganization</code> objects in an array.</p>
<h3>Properties</h3>
<ul>
<li><p><strong>pref</strong>: Set to <code>true</code> if this <code>ContactOrganization</code> contains the user's preferred value. <em>(boolean)</em></p>
</li>
<li><p><strong>type</strong>: A string that indicates what type of field this is, <em>home</em> for example. _(DOMString)</p>
</li>
<li><p><strong>name</strong>: The name of the organization. <em>(DOMString)</em></p>
</li>
<li><p><strong>department</strong>: The department the contract works for. <em>(DOMString)</em></p>
</li>
<li><p><strong>title</strong>: The contact's title at the organization. <em>(DOMString)</em></p>
</li>
</ul>
<h3>Supported Platforms</h3>
<ul>
<li>Android</li>
<li>BlackBerry 10</li>
<li>Firefox OS</li>
<li>iOS</li>
<li>Windows Phone 7 and 8</li>
<li>Windows (Windows 8.1 and Windows Phone 8.1 devices only)</li>
</ul>
<h3>Example</h3>
<pre><code>function onSuccess(contacts) {
    for (var i = 0; i &lt; contacts.length; i++) {
        for (var j = 0; j &lt; contacts[i].organizations.length; j++) {
            alert("Pref: "      + contacts[i].organizations[j].pref       + "\n" +
                "Type: "        + contacts[i].organizations[j].type       + "\n" +
                "Name: "        + contacts[i].organizations[j].name       + "\n" +
                "Department: "  + contacts[i].organizations[j].department + "\n" +
                "Title: "       + contacts[i].organizations[j].title);
        }
    }
};

function onError(contactError) {
    alert('onError!');
};

var options = new ContactFindOptions();
options.filter = "";
filter = ["displayName", "organizations"];
navigator.contacts.find(filter, onSuccess, onError, options);
</code></pre><h3>Android 2.X Quirks</h3>
<ul>
<li><strong>pref</strong>: Not supported by Android 2.X devices, returning <code>false</code>.</li>
</ul>
<h3>BlackBerry 10 Quirks</h3>
<ul>
<li><p><strong>pref</strong>: Not supported by BlackBerry devices, returning <code>false</code>.</p>
</li>
<li><p><strong>type</strong>: Not supported by BlackBerry devices, returning <code>null</code>.</p>
</li>
<li><p><strong>name</strong>: Partially supported.  The first organization name is stored in the BlackBerry <strong>company</strong> field.</p>
</li>
<li><p><strong>department</strong>: Not supported, returning <code>null</code>.</p>
</li>
<li><p><strong>title</strong>: Partially supported.  The first organization title is stored in the BlackBerry <strong>jobTitle</strong> field.</p>
</li>
</ul>
<h3>Firefox OS Quirks</h3>
<ul>
<li><p><strong>pref</strong>: Not supported</p>
</li>
<li><p><strong>type</strong>: Not supported</p>
</li>
<li><p><strong>department</strong>: Not supported</p>
</li>
<li><p>Fields <strong>name</strong> and <strong>title</strong> stored in <strong>org</strong> and <strong>jobTitle</strong>.</p>
</li>
</ul>
<h3>iOS Quirks</h3>
<ul>
<li><p><strong>pref</strong>: Not supported on iOS devices, returning <code>false</code>.</p>
</li>
<li><p><strong>type</strong>: Not supported on iOS devices, returning <code>null</code>.</p>
</li>
<li><p><strong>name</strong>: Partially supported.  The first organization name is stored in the iOS <strong>kABPersonOrganizationProperty</strong> field.</p>
</li>
<li><p><strong>department</strong>: Partially supported.  The first department name is stored in the iOS <strong>kABPersonDepartmentProperty</strong> field.</p>
</li>
<li><p><strong>title</strong>: Partially supported.  The first title is stored in the iOS <strong>kABPersonJobTitleProperty</strong> field.</p>
</li>
</ul>
<h3>Windows Quirks</h3>
<ul>
<li><p><strong>pref</strong>: Not supported, returning <code>false</code>.</p>
</li>
<li><p><strong>type</strong>: Not supported, returning <code>null</code>.</p>
</li>
</ul>
</div>
            </div>
        </div>
    </div>
</div>

</div>

  <div id="footer">
    <div class="row">
      <div class="column-10--hand offset-1--hand column-2--lap offset-2--lap">
        <a href="https://issues.apache.org/jira/browse/CB/component/12321101">Plugin Registry Issue Tracker</a>
      </div>
      <div class="column-10--hand offset-1--hand column-2--lap">
        <a href="http://cordova.apache.org/">Apache Cordova Home</a>
      </div>
    </div>
    <div class="row">
      <div class="column-10--hand offset-1--hand column-10--lap offset-2--lap left">
        <p>Copyright © 2012, 2013, 2014 The Apache Software Foundation, Licensed under the Apache License, Version 2.0</p>
        <p>Apache and the Apache feather logos are trademarks of The Apache Software Foundation.</p>
      </div>
    </div>
  </div>

  <script type="text/javascript" src="./contacts_files/angular.min.js"></script>
  <script type="text/javascript" src="./contacts_files/angular-route.min.js"></script>
  <script type="text/javascript" src="./contacts_files/angular-sanitize.min.js"></script>
  <script type="text/javascript" src="./contacts_files/moment.min.js"></script>
  <script type="text/javascript" src="./contacts_files/app.js"></script>
  <script type="text/javascript" src="./contacts_files/services.js"></script>
  <script type="text/javascript" src="./contacts_files/marked.js"></script>
  <script type="text/javascript" src="./contacts_files/controllers.js"></script>
  <script type="text/javascript" src="./contacts_files/home.js"></script>
  <script type="text/javascript" src="./contacts_files/packageDetails.js"></script>
  <script type="text/javascript" src="./contacts_files/viewAll.js"></script>
  <script type="text/javascript" src="./contacts_files/search.js"></script>
  <script type="text/javascript" src="./contacts_files/topbar.js"></script>
  <script type="text/javascript" src="./contacts_files/pluginlist.js"></script>
  <script type="text/javascript" src="./contacts_files/ng-enter.js"></script>
  <script type="text/javascript" src="./contacts_files/platformFilter.js"></script>


</body></html>